[{"name":"server.R","content":"### Part I\n\n# Useful page about shiny uploads and downloads:\n# https://mastering-shiny.org/action-transfer.html#uploading-data\n\nfunction(input, output, session) {\n  ### Function to generate participant data \n  ### should only depend on input$n_per_arm\n  thedata <- reactive({\n    set.seed(92220)\n    validate(\n      need(is.integer(input$n_per_arm), \"Please enter an integer value\")\n    )\n    \n    n_total = 2*input$n_per_arm\n    ID = 1:n_total\n    sex = as.factor(sample(c(\"M\", \"F\"), size = n_total, replace = T, prob = c(0.45,0.55)))\n    age = runif(n=n_total, min=50, max=65)\n    baseline_int = 100 + 0.25*(age-50) + 10*(sex == \"F\")\n    baseline = sapply(\n      1:n_total,\n      function(i){\n        rnorm(1, mean=baseline_int[i], sd=5)\n      }\n    )\n    BMI = rnorm(n=n_total, mean = 27, sd = 4)\n #   hist1 = as.factor(sample(c(\"Y\", \"N\"), size = n_total, replace = T, prob = c(0.1,0.9)))\n    df_part =  data.frame(ID = ID, sex=sex, age=age, baseline = baseline, BMI=BMI)\n    df_part\n  })\n  \n\n  ## This displays the participant data  \n  output$dto <- renderTable({\n    req(input$n_per_arm)\n    \n#    df_part <- data_missing()    \n    df_part <- thedata()\n    if(input$disp_p1 == \"head\") {\n      return(head(df_part))\n    }\n    else {\n      return(df_part)\n    }\n    \n  })\n  \n  ## Download the participant data  \n  output$download <- downloadHandler(\n    filename = function(){\"participant_data.csv\"}, \n    content = function(fname){\n      write.csv(thedata(), fname, quote=F, row.names=F)\n    }\n  )\n  ## output$contents displays the uploaded file\n  output$contents <- renderTable({\n\n    req(input$file1)\n    df_alloc <- read.csv(input$file1$datapath,\n                   header = T,\n                   sep = input$sep,\n                   quote = \"\")\n    if(is.character(df_alloc$arm)){\n      df_alloc$arm = as.factor(df_alloc$arm)\n    }\n\n    if(is.character(df_alloc$sex)){\n      df_alloc$sex = as.factor(df_alloc$sex)\n    }\n    names_upload = names(df_alloc)\n    names_req = c(\"ID\", \"sex\", \"age\", \"baseline\", \"BMI\", \"arm\")\n    validate(\n      need(\n        identical(names_upload, names_req),\n        sprintf(\n          \"The column names should be %s but yours are %s\", \n          paste(names_req, collapse = \", \" ), \n          paste(names_upload, collapse = \", \"))\n      )\n    )\n    \n    if(input$disp == \"head\") {\n      return(head(df_alloc))\n    } else {\n      return(df_alloc)\n    }\n    \n  })\n  \n  ## Running the trial and downloading results\n  ## Can I just put this here?\n  ## DON'T USE input$n_per_arm BECAUSE IT WILL BE SET TO DEFAULT 1\n\n\n  res_data <- reactive({\n    #### There needs to be a bit more uncertainty I think.\n    run_trial = function(\n      df_alloc = df_alloc,\n      coef_baseline =0.96,\n      sd_coef_baseline = 0.07,\n      coef_arm=-0.27,\n      coef_sex=0,\n      coef_BMI = -0.35,\n      sd_coef_BMI = 0.01,\n      coef_armsex=0.05,\n      coef_armage=0,\n      coef_norm=1,\n      coef_unif=0,\n      coef_cat=0.75,\n      sd_err=2,\n      seed = 92220\n      ){\n        df_alloc = df_alloc[order(df_alloc$ID),]\n        set.seed(seed)\n        df_alloc_full = df_alloc\n        ## First add the three latent variables\n        n_total = nrow(df_alloc_full)\n        hidden_norm = rnorm(n=n_total, mean=0, sd=1)\n        hidden_unif = runif(n=n_total, min=0, max=1)\n        ## THIS ISN'T WORKING - EVERYONE GETS B\n        ## This is because it relies on input$n_per_arm, which will be set to 1 when people are going back in\n        ## Change it so it reads the size of the uploaded data frame \n        hidden_cat = as.factor(sample(c(\"A\", \"B\", \"C\"), size=n_total, replace=T))\n        \n        df_alloc_full$hid_norm = hidden_norm\n        df_alloc_full$hid_unif = hidden_unif\n        df_alloc_full$hid_cat = hidden_cat\n        \n        n_tot = nrow(df_alloc)\n        coef_baseline_rand = rnorm(\n          n=n_total, \n          mean = coef_baseline,\n          sd = sd_coef_baseline\n        )\n        coef_BMI_rand = rnorm(\n          n=n_total, \n          mean = coef_BMI,\n          sd = sd_coef_BMI\n        )\n        \n        \n        out_temp = coef_baseline_rand*df_alloc_full$baseline + \n          coef_arm*as.numeric(df_alloc_full$arm) + \n          coef_sex*as.numeric(df_alloc_full$sex) +\n          coef_BMI*as.numeric(df_alloc_full$BMI) +\n          coef_armsex*as.numeric(df_alloc_full$arm)*as.numeric(df_alloc_full$sex)+ \n          coef_armage*as.numeric(df_alloc_full$arm)*(df_alloc_full$age - 50)+\n          coef_norm*df_alloc_full$hid_norm +\n          coef_unif*df_alloc_full$hid_unif +\n          coef_cat*as.numeric(df_alloc_full$hid_cat) +\n          rnorm(n_tot, mean=0, sd=sd_err)\n#        df_alloc_full$outcome = out_temp\n#        df_alloc_full\n        df_alloc$outcome = out_temp\n        df_alloc\n      } \n\n    set.seed(92220)\n    req(input$file1)\n    \n    df <- read.csv(input$file1$datapath,\n                   header = T,\n                   sep = input$sep,\n                   quote = \"\")\n    if(is.character(df$arm)){\n      df$arm = as.factor(df$arm)\n    }\n    if(is.character(df$sex)){\n      df$sex = as.factor(df$sex)\n    }\n    df_run = run_trial(df)\n #   df_nohidden = df_run[,c(1,2,3,4,5,9)]\n#    df_nohidden\n    df_run\n  })\n  \n  output$results <- renderTable({\n    res_data()\n  })\n    \n  output$download_results <- downloadHandler(\n    filename = function(){\"trial_results.csv\"}, \n    content = function(fname){\n      write.csv(res_data(), fname, quote=F, row.names=F)\n    }\n  )\n  \n\n}","type":"text"},{"name":"ui.R","content":"require(markdown)\nlibrary(litedown)\nrequire(mice)\nrequire(tidyverse)\n\ndownloadButton <- function(...) {\n  tag <- shiny::downloadButton(...)\n  tag$attribs$download <- NULL\n  tag\n}\n\nnavbarPage(\"Clinical Trials IV: Assignment 1\",\n           tabPanel(\"Instructions\",\n                    includeMarkdown('assignment1_instructions.md')\n           ),\n           tabPanel(\"Part 1\",\n                    sidebarLayout(\n                      sidebarPanel(\n                        numericInput(\"n_per_arm\", \"Number of particpants per arm\", 1, min=1, max = NA, step=1),\n                        radioButtons(\"disp_p1\", \"Display\",\n                                     choices = c(Head = \"head\",\n                                                 All = \"all\"),\n                                     selected = \"head\"),\n                        downloadButton('download',\"Download the data\")\n                        \n                        \n                      ),\n                      mainPanel(\n                        includeMarkdown('assignment1_part1a.md'),\n                        fluidRow(column(7,tableOutput('dto'))),\n                        includeMarkdown('assignment1_part1b.md')\n                        \n                      )\n                    )\n           ),\n           tabPanel(\"Part 2\",\n                    sidebarLayout(\n                      sidebarPanel(\n                        ## Uploading and displaying the data\n                        fileInput(\"file1\", \"Upload your participant data with allocations\",\n                                  multiple = TRUE,\n                                  accept = c(\"text/csv\",\n                                             \"text/comma-separated-values,text/plain\",\n                                             \".csv\")),\n                        radioButtons(\"sep\", \"Separator\",\n                                     choices = c(Comma = \",\",\n                                                 Semicolon = \";\",\n                                                 Tab = \"\\t\"),\n                                     selected = \",\"),\n                        radioButtons(\"disp\", \"Display\",\n                                     choices = c(Head = \"head\",\n                                                 All = \"all\"),\n                                     selected = \"head\"),\n                        \n                        # Running the trial - do something to the uploaded data and add column in?\n                        # Do I need a separate 'run trial' button? I'm not sure I do\n                        \n                        downloadButton('download_results',\"Download trial results\")\n                        \n                      ),\n                      mainPanel(\n                        includeMarkdown('assignment1_part2a.md'),\n                        fluidRow(column(7,tableOutput('contents'))),\n                        includeMarkdown('assignment1_part2b.md'),\n                        fluidRow(column(7,tableOutput('results')))\n                        \n                      )\n                    )\n           )\n)\n","type":"text"},{"name":"DemoCTdashboard.Rproj","content":"Version: 1.0\nProjectId: 384dac8f-b4fd-4d78-9912-1047ed510389\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"},{"name":"README.md","content":"# DemoCTdashboard\n","type":"text"},{"name":"alloc20.csv","content":"ID,sex,age,baseline,BMI,arm\n1,F,62.8743864980061,120.369686903216,22.4812693418903,A\n2,F,52.2196605685167,108.87702612125,22.8686068721883,B\n3,F,62.6651204493828,117.440617831571,26.2387841105094,A\n4,F,64.7190727689303,113.473014719744,37.4502460047524,B\n5,F,60.1548652874772,112.400471485809,27.0529908145649,B\n6,M,59.8810737731401,105.781640062994,39.5709302700938,B\n7,F,64.0085627429653,113.719772340975,27.1493991187728,B\n8,F,60.9356351394672,107.066508540699,26.3890109824741,B\n9,F,54.4665298215114,121.209751887452,16.8769025673614,A\n10,M,56.5759219275787,103.241099095087,26.9370393653822,B\n11,F,57.8474972490221,120.432045173654,30.6639112576725,B\n12,M,56.0596208984498,101.670155640652,22.4972950760423,B\n13,F,54.102807471063,105.219515711944,25.6872570389814,A\n14,M,59.0633225627244,102.255622486437,27.928215822092,B\n15,M,53.260726473527,100.627167239826,23.3969407451856,B\n16,F,53.3779224322643,106.868268983935,27.598557104492,A\n17,F,61.7803538101725,119.118246241371,24.7826024548837,B\n18,M,64.2521387466695,97.9766048785334,23.3113875954856,A\n19,F,58.2800331315957,104.97876562367,31.6576519162567,A\n20,F,57.5304158660583,105.920609334046,26.9560370218021,A\n","type":"text"},{"name":"assignment1_instructions.md","content":"# General guidance\n\nWelcome to the first assignment for Clinical Trials IV. \nThis dashboard will enable you to generate your data, and you'll need to keep visiting it as you progress through the stages of the trial. You'll find instructions for how to start in 'Part 1', and this tab contains some more general information.\n\nThe idea of this process is to replicate the experience of being a trial statistician, and to give you as much flexibility as possible in the design and analysis choices you make. \n\nIf you encounter any problems (particularly with this dashboard), or if you notice any behaviour or output that seems unusual, please do send me an email: r.h.oughton@durham.ac.uk.\n\n\n## What's happening under the bonnet?\n\nThe participant data is randomly generated, as are the results. The mechanisms governing them are not available to you, since that would give you the answers!\n\nRandom seeds have been used, so that if you do everything the same way (same number of participants, same allocation) it will generate exactly the same output. However, if you change those things, all outcome measurements will change.\n\nAs you work through the assignment, you may also have to use random simulation. It would be sensible at these points to set a seed, so that you can recreate your results if necessary. You can read more about using seeds in R [here](https://www.statology.org/set-seed-in-r/#:~:text=seed()%20function%20in%20R,time%20you%20run%20the%20code).\n\n## Working with CSV files\n\nCSV stands for 'comma-separated values', and is a text-based file format that uses commas to separate values. If you open a CSV file in a text editor, it will look something like this:\n\n```{verbatim}\n\"ID\",\"Data\"\n1,0.037\n2,-1.11\n3,-0.67\n4,-1.07\n5,-1.27\n6,-1.37\n```\n\nNotice that within each row, the entries are separated by commas. CSV files will usually automatically open in MS Excel (or equivalent). The advantage of this very simple format is that it is (or should be!) simple to work with on a variety of different operating systems and in R. If you're working on a Mac, it is best to open the file in MS Excel (not Numbers), since this will make it easier to preserve the CSV formatting. However, there is no need to open CSV files in anything other than R.\n\n### Reading a CSV file into R\n\nOnce you've downloaded and saved your CSV file , you'll need to load it into R so that you can work with it. If you're working in RStudio, you can find the CSV file in 'Files' (in the bottom right window) and right click to import.\n\nYou can also import a CSV in R file using the command\n\n`df = read.csv(\"filepath\", header=TRUE)`\n\nHere, 'filepath' is the path to the saved CSV file from the working directory, and the imported dataset will appear in R as a data frame called `df`. Setting `header` to TRUE lets R know that the file contains column headers.\n\nOne sensible way to proceed would be to make a folder/directory for clinical trials (or for this assignment), save all related files in that folder/directory and set that as the working directory whenever working on the assignment. Then, the filepath is just the filename (including the .csv extension).\n\n### Saving a CSV file from R\n\nYou'll also need to save a data frame in R as a CSV file, to upload to this dashboard. You can do this with the command\n\n`write.csv(df, \"filepath\", row.names=FALSE, quote=FALSE)`\n\nHere, df is the name of the data frame in R that you want to write to a file, \"filepath\" is the path you want the CSV file to have in relation to the working directory, including the .csv extension. If you want to save it in your working directory, filepath would be \"filename.csv\".\n\nSetting `row.names` and `quote` to FALSE tells R not to add row names or to put things in quotation marks. \n\n**You aren't being assessed on your ability to work with CSV files, so please feel free to email me if you have problems!**\n\n\n","type":"text"},{"name":"assignment1_part1a.md","content":"# Part one: Instructions\n\n## Generate participant data\n\nIn the panel to the left, please input the number of participants *per arm* to be included in your trial. This dashboard will then generate twice that many participants, with their characteristics, which will be shown in the table below. You can download the data as a .csv file. Note that there are further instructions below the table!\n","type":"text"},{"name":"assignment1_part1b.md","content":"## Next step: Allocation\n\nOnce you have your participant data, the next step is the allocation. Usually in a clinical trial the statistician would be blind to which arm is which, but in this trial it is known. \n\nThe participants must each be allocated to arm \"A\" (control) or arm \"B\" (intervention) of the trial. You should store your allocation as a .csv file, with exactly the same data as in the file you downloaded, but with an extra column 'arm', containing the values 'A' and 'B'. The rows do not have to be in the same order as in the file you downloaded. You can save a data frame `df` to a CSV file in R using the command\n\n`write.csv(df, file = \"filepath\", quote=FALSE, row.names=FALSE)`\n\nOnce you have performed the allocation and created the CSV file, please go to the 'Part 2' panel.","type":"text"},{"name":"assignment1_part2a.md","content":"# Part two: Running the trial\n\n## Upload the allocation data\n\nNow that you have allocated each patient to either arm A (control) or B (intervention), it is time to run the trial. \n\nTo complete this step, you need a .csv file with the participant data you downloaded in step 1, and a new 'arm' column, showing the arm to which each participant has been allocated (either 'A' or'B').  \n\nUse the 'upload' button to upload your csv file. It should display below, so that you can check all appears in order. Occasionally a CSV file might get saved with a different separator. If this is the case then it should display properly for one of other the separator options.","type":"text"},{"name":"assignment1_part2b.md","content":"## Next step: Analysis\n\nNow that the trial has been run, you can download your results using the 'Download trial results' button to the left, and complete your analysis. The download will be a .csv file with all the same data you uploaded (participant details and allocation) and a new 'outcome' column, containing the post-trial measurements of the outcome variable for each participant. \n","type":"text"},{"name":"participant_data20.csv","content":"ID,sex,age,baseline,BMI\n1,F,62.8743864980061,120.369686903216,22.4812693418903\n2,F,52.2196605685167,108.87702612125,22.8686068721883\n3,F,62.6651204493828,117.440617831571,26.2387841105094\n4,F,64.7190727689303,113.473014719744,37.4502460047524\n5,F,60.1548652874772,112.400471485809,27.0529908145649\n6,M,59.8810737731401,105.781640062994,39.5709302700938\n7,F,64.0085627429653,113.719772340975,27.1493991187728\n8,F,60.9356351394672,107.066508540699,26.3890109824741\n9,F,54.4665298215114,121.209751887452,16.8769025673614\n10,M,56.5759219275787,103.241099095087,26.9370393653822\n11,F,57.8474972490221,120.432045173654,30.6639112576725\n12,M,56.0596208984498,101.670155640652,22.4972950760423\n13,F,54.102807471063,105.219515711944,25.6872570389814\n14,M,59.0633225627244,102.255622486437,27.928215822092\n15,M,53.260726473527,100.627167239826,23.3969407451856\n16,F,53.3779224322643,106.868268983935,27.598557104492\n17,F,61.7803538101725,119.118246241371,24.7826024548837\n18,M,64.2521387466695,97.9766048785334,23.3113875954856\n19,F,58.2800331315957,104.97876562367,31.6576519162567\n20,F,57.5304158660583,105.920609334046,26.9560370218021\n","type":"text"}]
